1- Monte uma procedure que exiba os 10 atores mais populares, baseado em sua quantidade de filmes. Essa procedure não deve receber parâmetros de entrada ou saída e, quando chamada, deve exibir o id do ator ou atriz e a quantidade de filmes em que atuaram.
R: 
USE sakila
DELIMITER $$

CREATE PROCEDURE ExibirDezAtoresMaisPopulares()
BEGIN
    SELECT actor_id, COUNT(*) AS 'quantidade de filmes'
    FROM film_actor
    GROUP BY actor_id
    ORDER BY COUNT(*) DESC
    LIMIT 10;
END $$

DELIMITER ;

-- call procedure

CALL ExibirDezAtoresMaisPopulares()

2- Monte uma procedure que receba como parâmetro de entrada o nome da categoria desejada em uma string e que exiba o id do filme , seu titulo , o id de sua categoria e o nome da categoria selecionada. Use as tabelas film , film_category e category para montar essa procedure.
R: 
USE sakila
DELIMITER $$

CREATE PROCEDURE MostrarFilmePorCategoria(IN film_category_param VARCHAR(50))
BEGIN
    SELECT f.film_id, f.title, fc.category_id, c.name
    FROM sakila.film AS f
    INNER JOIN sakila.film_category AS fc ON f.film_id = fc.film_id
    INNER JOIN sakila.category AS c ON fc.category_id = c.category_id
    WHERE c.name = film_category_param;
END $$

DELIMITER ;

-- call procedure

CALL MostrarFilmePorCategoria('Action')

3- Monte uma procedure que receba o email de um cliente como parâmetro de entrada e diga se o cliente está ou não ativo, através de um parâmetro de saída.
R: 
USE sakila
DELIMITER $$

CREATE PROCEDURE ClienteEstaAtivoPorEmail(
	IN email_param VARCHAR(200),
    OUT isActive VARCHAR(50)
)
BEGIN
	SELECT IF(active = 1, 'Está ativo', 'Está inativo') as 'ativo ou inativo'
    FROM customer
    WHERE email = email_param
	INTO isActive;
END $$

DELIMITER ;

-- call procedure

SELECT @isActive;
CALL ClienteEstaAtivoPorEmail('SANDRA.MARTIN@sakilacustomer.org', @isActive);
SELECT @isActive as 'está ativo?';